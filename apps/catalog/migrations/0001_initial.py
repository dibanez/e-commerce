# Generated by Django 5.0.8 on 2025-08-17 12:55

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ProductAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code for this attribute (e.g., color, size)",
                        max_length=50,
                        unique=True,
                        verbose_name="code",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("integer", "Integer"),
                            ("decimal", "Decimal"),
                            ("boolean", "Boolean"),
                            ("date", "Date"),
                            ("enum", "Enumeration"),
                        ],
                        default="text",
                        max_length=20,
                        verbose_name="type",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="description")),
                ("is_required", models.BooleanField(default=False, verbose_name="required")),
                ("is_filterable", models.BooleanField(default=True, verbose_name="filterable")),
                ("sort_order", models.PositiveIntegerField(default=0, verbose_name="sort order")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
            ],
            options={
                "verbose_name": "product attribute",
                "verbose_name_plural": "product attributes",
                "db_table": "catalog_productattribute",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True, verbose_name="name")),
                (
                    "slug",
                    models.SlugField(blank=True, max_length=100, unique=True, verbose_name="slug"),
                ),
                ("description", models.TextField(blank=True, verbose_name="description")),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="categories/", verbose_name="image"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                ("sort_order", models.PositiveIntegerField(default=0, verbose_name="sort order")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="catalog.category",
                        verbose_name="parent category",
                    ),
                ),
            ],
            options={
                "verbose_name": "category",
                "verbose_name_plural": "categories",
                "db_table": "catalog_category",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="name")),
                (
                    "slug",
                    models.SlugField(blank=True, max_length=200, unique=True, verbose_name="slug"),
                ),
                ("description", models.TextField(blank=True, verbose_name="description")),
                (
                    "short_description",
                    models.CharField(blank=True, max_length=500, verbose_name="short description"),
                ),
                (
                    "sku",
                    models.CharField(
                        help_text="Stock Keeping Unit",
                        max_length=50,
                        unique=True,
                        verbose_name="SKU",
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.01"))],
                        verbose_name="base price",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[("EUR", "Euro"), ("USD", "US Dollar"), ("GBP", "British Pound")],
                        default="EUR",
                        max_length=3,
                        verbose_name="currency",
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                        verbose_name="cost price",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=8,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.001"))],
                        verbose_name="weight (kg)",
                    ),
                ),
                (
                    "dimensions",
                    models.CharField(
                        blank=True,
                        help_text="Format: length x width x height in cm",
                        max_length=100,
                        verbose_name="dimensions (L x W x H)",
                    ),
                ),
                (
                    "stock_quantity",
                    models.PositiveIntegerField(default=0, verbose_name="stock quantity"),
                ),
                (
                    "track_inventory",
                    models.BooleanField(default=True, verbose_name="track inventory"),
                ),
                (
                    "allow_backorders",
                    models.BooleanField(default=False, verbose_name="allow backorders"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                ("is_featured", models.BooleanField(default=False, verbose_name="featured")),
                (
                    "meta_title",
                    models.CharField(blank=True, max_length=200, verbose_name="meta title"),
                ),
                (
                    "meta_description",
                    models.CharField(blank=True, max_length=300, verbose_name="meta description"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="catalog.category",
                        verbose_name="category",
                    ),
                ),
            ],
            options={
                "verbose_name": "product",
                "verbose_name_plural": "products",
                "db_table": "catalog_product",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductAttributeOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("value", models.CharField(max_length=100, verbose_name="value")),
                (
                    "display_name",
                    models.CharField(blank=True, max_length=100, verbose_name="display name"),
                ),
                (
                    "color_code",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code for visual representation (e.g., #FF0000)",
                        max_length=7,
                        verbose_name="color code",
                    ),
                ),
                ("sort_order", models.PositiveIntegerField(default=0, verbose_name="sort order")),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                (
                    "attribute",
                    models.ForeignKey(
                        limit_choices_to={"type": "enum"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="catalog.productattribute",
                        verbose_name="attribute",
                    ),
                ),
            ],
            options={
                "verbose_name": "product attribute option",
                "verbose_name_plural": "product attribute options",
                "db_table": "catalog_productattributeoption",
                "ordering": ["sort_order", "value"],
                "unique_together": {("attribute", "value")},
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("image", models.ImageField(upload_to="products/", verbose_name="image")),
                ("alt_text", models.CharField(blank=True, max_length=200, verbose_name="alt text")),
                ("sort_order", models.PositiveIntegerField(default=0, verbose_name="sort order")),
                ("is_primary", models.BooleanField(default=False, verbose_name="primary image")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="catalog.product",
                        verbose_name="product",
                    ),
                ),
            ],
            options={
                "verbose_name": "product image",
                "verbose_name_plural": "product images",
                "db_table": "catalog_productimage",
                "ordering": ["sort_order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductAttributeValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("value_text", models.TextField(blank=True, null=True, verbose_name="text value")),
                (
                    "value_integer",
                    models.IntegerField(blank=True, null=True, verbose_name="integer value"),
                ),
                (
                    "value_decimal",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="decimal value",
                    ),
                ),
                (
                    "value_boolean",
                    models.BooleanField(blank=True, null=True, verbose_name="boolean value"),
                ),
                ("value_date", models.DateField(blank=True, null=True, verbose_name="date value")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="values",
                        to="catalog.productattribute",
                        verbose_name="attribute",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attribute_values",
                        to="catalog.product",
                        verbose_name="product",
                    ),
                ),
                (
                    "value_option",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalog.productattributeoption",
                        verbose_name="option value",
                    ),
                ),
            ],
            options={
                "verbose_name": "product attribute value",
                "verbose_name_plural": "product attribute values",
                "db_table": "catalog_productattributevalue",
                "unique_together": {("product", "attribute")},
            },
        ),
    ]
