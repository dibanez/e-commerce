# Generated by Django 5.0.8 on 2025-08-17 12:55

import django.core.validators
import django.db.models.deletion
import django_fsm
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("catalog", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True,
                        help_text="Human-readable order number",
                        max_length=50,
                        unique=True,
                        verbose_name="order number",
                    ),
                ),
                (
                    "guest_email",
                    models.EmailField(
                        blank=True,
                        help_text="Email for guest orders",
                        max_length=254,
                        null=True,
                        verbose_name="guest email",
                    ),
                ),
                (
                    "status",
                    django_fsm.FSMField(
                        choices=[
                            ("draft", "Draft"),
                            ("pending_payment", "Pending Payment"),
                            ("paid", "Paid"),
                            ("processing", "Processing"),
                            ("shipped", "Shipped"),
                            ("delivered", "Delivered"),
                            ("canceled", "Canceled"),
                            ("refunded", "Refunded"),
                        ],
                        default="draft",
                        max_length=20,
                        protected=True,
                        verbose_name="status",
                    ),
                ),
                (
                    "billing_first_name",
                    models.CharField(max_length=50, verbose_name="billing first name"),
                ),
                (
                    "billing_last_name",
                    models.CharField(max_length=50, verbose_name="billing last name"),
                ),
                (
                    "billing_company",
                    models.CharField(blank=True, max_length=100, verbose_name="billing company"),
                ),
                (
                    "billing_address_line_1",
                    models.CharField(max_length=255, verbose_name="billing address line 1"),
                ),
                (
                    "billing_address_line_2",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="billing address line 2"
                    ),
                ),
                ("billing_city", models.CharField(max_length=100, verbose_name="billing city")),
                (
                    "billing_state",
                    models.CharField(max_length=100, verbose_name="billing state/province"),
                ),
                (
                    "billing_postal_code",
                    models.CharField(max_length=20, verbose_name="billing postal code"),
                ),
                (
                    "billing_country",
                    models.CharField(default="ES", max_length=2, verbose_name="billing country"),
                ),
                (
                    "billing_phone",
                    models.CharField(blank=True, max_length=20, verbose_name="billing phone"),
                ),
                (
                    "shipping_first_name",
                    models.CharField(max_length=50, verbose_name="shipping first name"),
                ),
                (
                    "shipping_last_name",
                    models.CharField(max_length=50, verbose_name="shipping last name"),
                ),
                (
                    "shipping_company",
                    models.CharField(blank=True, max_length=100, verbose_name="shipping company"),
                ),
                (
                    "shipping_address_line_1",
                    models.CharField(max_length=255, verbose_name="shipping address line 1"),
                ),
                (
                    "shipping_address_line_2",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="shipping address line 2"
                    ),
                ),
                ("shipping_city", models.CharField(max_length=100, verbose_name="shipping city")),
                (
                    "shipping_state",
                    models.CharField(max_length=100, verbose_name="shipping state/province"),
                ),
                (
                    "shipping_postal_code",
                    models.CharField(max_length=20, verbose_name="shipping postal code"),
                ),
                (
                    "shipping_country",
                    models.CharField(default="ES", max_length=2, verbose_name="shipping country"),
                ),
                (
                    "shipping_phone",
                    models.CharField(blank=True, max_length=20, verbose_name="shipping phone"),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[("EUR", "Euro"), ("USD", "US Dollar"), ("GBP", "British Pound")],
                        default="EUR",
                        max_length=3,
                        verbose_name="currency",
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                        verbose_name="subtotal",
                    ),
                ),
                (
                    "tax_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                        verbose_name="tax total",
                    ),
                ),
                (
                    "shipping_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                        verbose_name="shipping total",
                    ),
                ),
                (
                    "discount_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                        verbose_name="discount total",
                    ),
                ),
                (
                    "grand_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                        verbose_name="grand total",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "terms_accepted",
                    models.BooleanField(default=False, verbose_name="terms accepted"),
                ),
                (
                    "newsletter_signup",
                    models.BooleanField(default=False, verbose_name="newsletter signup"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="updated at")),
                ("paid_at", models.DateTimeField(blank=True, null=True, verbose_name="paid at")),
                (
                    "shipped_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="shipped at"),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="delivered at"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "order",
                "verbose_name_plural": "orders",
                "db_table": "orders_order",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "from_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("draft", "Draft"),
                            ("pending_payment", "Pending Payment"),
                            ("paid", "Paid"),
                            ("processing", "Processing"),
                            ("shipped", "Shipped"),
                            ("delivered", "Delivered"),
                            ("canceled", "Canceled"),
                            ("refunded", "Refunded"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="from status",
                    ),
                ),
                (
                    "to_status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("pending_payment", "Pending Payment"),
                            ("paid", "Paid"),
                            ("processing", "Processing"),
                            ("shipped", "Shipped"),
                            ("delivered", "Delivered"),
                            ("canceled", "Canceled"),
                            ("refunded", "Refunded"),
                        ],
                        max_length=20,
                        verbose_name="to status",
                    ),
                ),
                ("reason", models.TextField(blank=True, verbose_name="reason")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                (
                    "changed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="changed by",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="orders.order",
                        verbose_name="order",
                    ),
                ),
            ],
            options={
                "verbose_name": "order status history",
                "verbose_name_plural": "order status histories",
                "db_table": "orders_orderstatushistory",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("product_name", models.CharField(max_length=200, verbose_name="product name")),
                ("product_sku", models.CharField(max_length=50, verbose_name="product SKU")),
                (
                    "product_description",
                    models.TextField(blank=True, verbose_name="product description"),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="quantity",
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.01"))],
                        verbose_name="unit price",
                    ),
                ),
                (
                    "line_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                        verbose_name="line total",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="orders.order",
                        verbose_name="order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="catalog.product",
                        verbose_name="product",
                    ),
                ),
            ],
            options={
                "verbose_name": "order item",
                "verbose_name_plural": "order items",
                "db_table": "orders_orderitem",
                "unique_together": {("order", "product")},
            },
        ),
    ]
